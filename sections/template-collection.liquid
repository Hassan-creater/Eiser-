<div class=" max-w-[1440px] w-full mx-auto  ">
  {% render 'page' , title: section.settings.title %}

  <div class="w-full  mb-[5em] mt-[9em]  flex gap-[1em] px-[4em]">
    {% comment %} FILTERS {% endcomment %}
    <form
      id="price-form"
      action="{{ collection.url }}"
      method="GET"
      class="w-[25%] 0 py-[0.2em] flex flex-col gap-[1.5em]  ">
      <input
        type="hidden"
        name="sort_by"
        value="{{ collection.sort_by }}">
      <div class="active-filters">
        <div class="flex justify-center gap-4 w-full px-[1em]   mb-[0.7em] border-[0.5px] border-slate-200">
          {% for filter in collection.filters %}
            {% if filter.active_values.size > 0 %}

              {% for value in filter.active_values %}
                <div class="min-w-[5em]  text-center rounded-sm   border-[1px] border-lime-500 my-2 ">
                  <a href="{{ value.url_to_remove }}" class="active-filter">
                    {{ value.label }}
                  </a>
                </div>
              {%- endfor -%}


            {%- endif -%}
          {%- endfor -%}
        </div>

        <a href="{{ collection.url }}?sort_by={{ collection.sort_by }}" class="clear-all  ">
          Clear All Filters
        </a>
      </div>

      {% for filters in collection.filters %}

        {% case filters.label %}
          {% when 'Price' %}

            <div class="w-full p-[0.2em]  px-[1.2em] py-[1em] border-[0.5px] border-slate-200   ">
              <h1 class="text-[18px] py-[0.3em] text-[rgb(42,42,42)] border-b-[1.2px] border-lime-500">{{ filters.label }}</h1>

              <div class="w-full p-[0.2em]  py-[0.5em] flex flex-col gap-[0.8em]">


              <div class="flex justify-between items-center">
                <label class="flex flex-col text-sm">
                  From
                  <input
                    type="number"
                    name="filter.v.price.gte"
                    value="0"
                    disabled = "true"
                    id="price-from"
                    class="border p-2 rounded"
                    min="0"
                    {% if collection.products_price.min %}
                      value="{{ collection.products_price.min | money_without_currency | replace: ',', '' | round }}"
                      max="{{ collection.products_price.max | money_without_currency | replace: ',', '' | round }}"
                    {% else %}
                      max="1000"
                    {% endif %}
                    step="1"
                    onchange="this.form.submit()"
                  >
                </label>
                  <p>=</p>
                <label class="flex flex-col text-sm">
                  To
                  <input
                    type="number"
                    name="filter.v.price.lte"
                    id="price-to"
                    class="border p-2 rounded"
                    min="0"
                    {% if collection.products_price.max %}
                      value="{{ collection.products_price.max | money_without_currency | replace: ',', '' | round }}"
                      max="{{ collection.products_price.max | money_without_currency | replace: ',', '' | round }}"
                    {% else %}
                      max="1000"
                    {% endif %}
                    step="1"
                    onchange="this.form.submit()"
                  >
                </label>
              </div>
              

              </div>
            </div>

          {% else %}

            <div class="w-full p-[0.2em]  px-[1.2em] py-[1em] border-[0.5px] border-slate-200   ">
              <h1 class="text-[18px] py-[0.3em] text-[rgb(42,42,42)] border-b-[1.2px] border-lime-500">{{ filters.label }}</h1>

              <div class="w-full p-[0.2em]  py-[0.5em] flex flex-col gap-[0.8em]">

                {% for val in filters.values %}
                  <p class="filter-value">
                    <label>
                      <input
                        type="checkbox"
                        name="{{ val.param_name }}"
                        value="{{ val.value }}"
                        {% if val.active %}
                        checked{% endif %}
                        onchange="this.form.submit()">
                      <span class="filter-label">
                        {{ val.label }}
                        <span class="count">({{ val.count }})</span>
                      </span>
                    </label>
                  </p>

                {% endfor %}


              </div>
            </div>

        {% endcase %}


      {% endfor %}
    </form>

    {% comment %} PRODUCTS {% endcomment %}
    <div class="w-[75%]  p-[0.2em] p_container">
    
      <div class="w-full p-[0.5em] mb-[1em] bg-[#F6F6F6]  ">
        <form
          class="flex gap-4 items-center w-[15em] p-[0.2em] "
          method="get"
          action="{{ collection.url }}">
          <label for="SortBy">Sort by</label>
          <select
            class="border-[1px] p-[0.3em] border-slate-300 "
            name="sort_by"
            id="SortBy"
            onchange="this.form.submit()">
            {% for option in collection.sort_options %}
              <option
                value="{{ option.value }}"
                {% if option.value == collection.sort_by %}
                selected{% endif %}>
                {{ option.name }}
              </option>
            {% endfor %}
          </select>
        </form>
      </div>
      {% paginate collection.products by section.settings.number_of_products_per_page %}


        <div class="w-full flex flex-wrap justify-evenly gap-4">
         
          {% for product in collection.products  %}

      

              
              <div class=" sm:w-full  lg:w-[32%] p-1 group ">
                <div class="w-full h-[250px] bg-[#F0F2F1] relative flex justify-center items-center overflow-hidden  ">
                  {% if product.featured_image %}
                    <a class="w-full h-full" href="{{ product.url }}">
                      <img
                        src="{{ product.featured_image |  img_url: 'medium' }}"
                        alt="{{ product.image.alt }}"
                        width="100%"
                        height="100%"
                        class="object-center object-cover w-full h-full">
                    </a>
  
                  {% else %}
                    {{ 'product-1' | placeholder_svg_tag }}
                  {% endif %}
  
                  <div class="w-[90%] p-[0.5em] bg-[rgba(113,205,20,0.55)] absolute bottom-0 flex justify-evenly items-center translate-y-[5em] group-hover:-translate-y-[0em] duration-500 ">
                    <div quick-view="{{ product.handle }}" x-on:click=" quick_view = true"  class=" quick_view flex p-[0.6em] justify-center items-center rounded-full bg-white hover:bg-green-500 hover:text-white duration-300">
                      <i class="fa-solid fa-eye text-[1em]"></i>
                    </div>
                    <div data-product-handle="{{ product.handle }}" class="wishlist flex p-[0.6em] justify-center items-center rounded-full bg-white hover:bg-green-500 hover:text-red-500 duration-300">
                      <i class="fa-solid fa-heart "></i>
                    </div>
                    <form class="add-to-cart-form" data-product-id="{{ product.selected_or_first_available_variant.id }}">
                      <input
                        type="hidden"
                        name="id"
                        value="{{ product.variants.first.id }}">
                      <button type="submit" class="add-to-cart-button flex p-[0.6em] justify-center items-center rounded-full bg-white hover:bg-green-500 hover:text-white duration-300 cursor-pointer">
                        <i class="fa-solid fa-cart-shopping"></i>
                      </button>
                    </form>
  
                  </div>
                </div>
                <div class="w-full h-[80px]  border-[1px]  border-slate-300 p-[1.5em] flex flex-col justify-center gap-[0.5em]">
                  <p class="text-[14px] roboto group-hover:text-green-500 duration-300">{{ product.title }}</p>
                  <div class="w-full flex gap-[1.3em] items-center  ">
                    <p class="text-[20px] roboto">{{ product.price | money }}</p>
  
                  </div>
                </div>
              </div>
            



          {% else %}
            <p>There are no products inside of this collection</p>
          {% endfor %}
        </div>


        {% render 'pagination'
          , pagination: paginate %}
      {% endpaginate %}
    </div>
  </div>

</div>


{% comment %} <script>
            class Filters{
               constructor(){
                    this.getPriceFilter();
               }
        
               getPriceFilter(){
                 let price_range = document.getElementById('price_range');
                 let price_value = document.getElementById('price_value');
        
                 price_value.textContent = `0 - ${price_range.value} Rs`
        
                 price_range.addEventListener("input",function(){
                   price_value.textContent = `0 - ${price_range.value} Rs`
                 })
                 
               }
            };
        
            const filters = new Filters();
</script> {% endcomment %}


<script>
  document.addEventListener("DOMContentLoaded", function() {
    const params   = new URLSearchParams(window.location.search);
    const fromIn   = document.getElementById("price-from");
    const toIn     = document.getElementById("price-to");
    const form     = document.getElementById("price-form");
  
    // 1) Pre-fill from URL or leave blank
    if (params.get("min_price")) fromIn.value = params.get("min_price");
    if (params.get("max_price")) toIn.value   = params.get("max_price");
  
    // 2) On change, auto-submit when both have values
    [fromIn, toIn].forEach(input => {
      input.addEventListener("change", () => {
        if (fromIn.value !== "" && toIn.value !== "") {
          form.submit();
        }
      });
    });
  });
</script>


{% schema %}
  {
    "name": "Template Collection",
    "settings": [
      {
        "type": "number",
        "id": "number_of_products_per_page",
        "default": 6,
        "label": "Number of products per page"
      }, {
        "type": "text",
        "id": "title",
        "label": "Title",
        "default": "Shop Catagory"
      }
    ]
  }
{% endschema %}